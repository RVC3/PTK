package ru.ppr.kuznyechik;

/**
 * Таск CPPKPP-34206
 *
 * Интерфейс для шифратора реализующий:
 * ГОСТ Р 34.12-2015 "Кузнечик": базовый алгоритм зашифрования/расшифрования
 * ГОСТ Р 34.13-2015: режим выработки имитовставки
 *
 * @author Dmitry Nevolin
 */
public interface Kuznyechik {

    /**
     * Направление работы ширфатора, указывается при инициализации
     */
    enum Direction {
        /**
         * Зашифрование
         */
        ENCRYPT(0),
        /**
         * Расшифрование
         */
        DECRYPT(1);

        private final int code;

        Direction(int code) {
            this.code = code;
        }

        public int getCode() {
            return code;
        }
    }

    /**
     * Инициализирует шифратор, может быть вызван повторно для переинициализации с другими данными
     *
     * @param key ключ шифратора, длина 64 байта (256 бит)
     * @param direction направление работы шифратора
     * @return true если инициализация прошла успешно, false в противном случае
     */
    boolean init(byte[] key, Direction direction);

    /**
     * Зашифровывает 1 блок данных
     *
     * @param in блок для шифрации, длина должна быть равна 16 байт (128 бит)
     * @param out для вывода результата, длина должна совпадать с длиной in
     */
    void encryptBlock(byte[] in, byte[] out);

    /**
     * Расшифровывает 1 блок данных
     *
     * @param in блок для шифрации, длина должна быть равна 16 байт (128 бит)
     * @param out для вывода результата, длина должна не меньше длины in
     */
    void decryptBlock(byte[] in, byte[] out);

    /**
     * Режим выработки имитовставки по принципу OMAC1
     *
     * @param in данные для вычисления, длина должна быть не меньше 16 байт (128 бит, длина блока)
     * @param out для вывода результата, длина должна должна не меньше 16 байт (128 бит, длина блока)
     */
    void omac1(byte[] in, byte[] out);
}
