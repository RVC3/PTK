package ru.ppr.cppk.sync.kpp.model;

/**
 * БСК
 *
 * @author Grigoriy Kashka
 */
public class SmartCard {

    /**
     * Внешний номер БСК. Идентификатор чипа карты. Задается при выпуске карты.
     */
    public String OuterNumber;

    /**
     * Номер кристалла (UID) БСК. Уникальный идентификатор кристалла. Задается при выпуске карты.
     */
    public String CrystalSerialNumber;

    /**
     * Тип БСК
     * Перечисление согласно справочнику НСИ «Типы носителей ПД»:
     * - БСК ЦППК на период
     * - БСК ЦППК на количество поездок
     * - БСК Провожающего
     * - СКМ
     * - СКМО
     * - Электронная карта «Тройка»
     * - ИПК
     * - ЭТТ
     * TicketStorageType
     */
    public Integer Type;

    /**
     * Эмитент
     * Краткое наименование эмитента согласно справочнику НСИ «Связь эмитентов и типов носителей ПД»
     */
    public String Issuer;

    /**
     * Счетчик использования карты. Исходное значение 0, увеличивается каждый раз при прикладывании к турникету. Для
     * Подсистемы анализа.
     */
    public int UsageCount;

    /**
     * Отсчитывающийся начиная с 0 номер дорожки на которую записан билет.
     * Может быть пустым, если карта была переполнена и билет был распечатан на чеке из-за этого
     */
    public Integer Track;

    /**
     * Билеты, которые уже были записаны на этой карте.
     * Заполняется, если карта была целиком заполнена действительными билетами
     */
    public ParentTicketInfo PresentTicket1;

    /**
     * Билеты, которые уже были записаны на этой карте.
     * Заполняется, если карта была целиком заполнена действительными билетами
     */
    public ParentTicketInfo PresentTicket2;
}
